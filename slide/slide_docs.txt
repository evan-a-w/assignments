[COMP1511 Extension Work]

Write a summary of how you made the changes that you did:

[E1:Summary] {{{
In order to implement the different modes, I first made a new night_map array and then 
created a pointer to the same type as the map array. This allowed me to easily switch between the two maps
without having to alter functions, by simply dereferencing this pointer.

I then adapted the main function to scan the absolute value of negative numbers to the night map instead of
the day map, and checked whether there were initially any blocks in the day map. If not, the game would immediately
be over. 

I also created several new boolean variables to track the state of the game.
These include:
    - inverted, which when true indicates that the map in play is the night map
    - night_win, which indicates whether the night map is empty and therefore whether that half of the game is won.
    - day_win, which is the same as night_win but for the day map.

The final point of adjustment was the fire_laser function, responsible for the fire_laser command. This function
holds the logic of checking whether the game is won, which requires an update in the night realm.
Essentially, I made it so that if the current map is empty, it sets the respective win boolean (night_win or day_win)
to true, and outputs "Game Won!" only if both of these variables are true. This allows for accurate reporting of
victories.

The first test was specifically designed to test the shifting functionality of my program, including whether it
accurately reported losses. Included in this test was a rotate command, which I just used to ensure that rotate
functionality continued to work with the night mode.

The second test concerned the win functionality as well as TNT, and consisted of a circular section of blocks
centred with TNT in both the night and day maps.
}}}

Write two tests to test your implementation of Extension 1 ("Night Realm").

[E1:Test 1] {{{
242

2 2 1  2 3 1  2 4 1  2 5 1  2 6 1  2 7 1  2 8 1  2 9 1  2 10 1  2 11 1  2 12 1
3 2 1  3 3 1  3 4 1  3 5 1  3 6 1  3 7 1  3 8 1  3 9 1  3 10 1  3 11 1  3 12 1
4 2 1  4 3 1  4 4 1  4 5 1  4 6 1  4 7 1  4 8 1  4 9 1  4 10 1  4 11 1  4 12 1
5 2 1  5 3 1  5 4 1  5 5 1  5 6 1  5 7 1  5 8 1  5 9 1  5 10 1  5 11 1  5 12 1
6 2 1  6 3 1  6 4 1  6 5 1  6 6 1  6 7 1  6 8 1  6 9 1  6 10 1  6 11 1  6 12 1
7 2 1  7 3 1  7 4 1  7 5 1  7 6 1  7 7 5  7 8 1  7 9 1  7 10 1  7 11 1  7 12 1
8 2 1  8 3 1  8 4 1  8 5 1  8 6 1  8 7 1  8 8 1  8 9 1  8 10 1  8 11 1  8 12 1
9 2 1  9 3 1  9 4 1  9 5 1  9 6 1  9 7 1  9 8 1  9 9 1  9 10 1  9 11 1  9 12 1
10 2 1  10 3 1  10 4 1  10 5 1  10 6 1  10 7 1  10 8 1  10 9 1  10 10 1  10 11 1  10 12 1
11 2 1  11 3 1  11 4 1  11 5 1  11 6 1  11 7 1  11 8 1  11 9 1  11 10 1  11 11 1  11 12 1
12 2 1  12 3 1  12 4 1  12 5 1  12 6 1  12 7 1  12 8 1  12 9 1  12 10 1  12 11 1  12 12 1

2 2 -1  2 3 -1  2 4 -1  2 5 -1  2 6 -1  2 7 -1  2 8 -1  2 9 -1  2 10 -1  2 11 -1  2 12 -1
3 2 -1  3 3 -1  3 4 -1  3 5 -1  3 6 -1  3 7 -1  3 8 -1  3 9 -1  3 10 -1  3 11 -1  3 12 -1
4 2 -1  4 3 -1  4 4 -1  4 5 -1  4 6 -1  4 7 -1  4 8 -1  4 9 -1  4 10 -1  4 11 -1  4 12 -1
5 2 -1  5 3 -1  5 4 -1  5 5 -1  5 6 -1  5 7 -1  5 8 -1  5 9 -1  5 10 -1  5 11 -1  5 12 -1
6 2 -1  6 3 -1  6 4 -1  6 5 -1  6 6 -1  6 7 -1  6 8 -1  6 9 -1  6 10 -1  6 11 -1  6 12 -1
7 2 -1  7 3 -1  7 4 -1  7 5 -1  7 6 -1  7 7 -5  7 8 -1  7 9 -1  7 10 -1  7 11 -1  7 12 -1
8 2 -1  8 3 -1  8 4 -1  8 5 -1  8 6 -1  8 7 -1  8 8 -1  8 9 -1  8 10 -1  8 11 -1  8 12 -1
9 2 -1  9 3 -1  9 4 -1  9 5 -1  9 6 -1  9 7 -1  9 8 -1  9 9 -1  9 10 -1  9 11 -1  9 12 -1
10 2 -1  10 3 -1  10 4 -1  10 5 -1  10 6 -1  10 7 -1  10 8 -1  10 9 -1  10 10 -1  10 11 -1  10 12 1
11 2 -1  11 3 -1  11 4 -1  11 5 -1  11 6 -1  11 7 -1  11 8 -1  11 9 -1  11 10 -1  11 11 -1  11 12 1
12 2 -1  12 3 -1  12 4 -1  12 5 -1  12 6 -1  12 7 -1  12 8 -1  12 9 -1  12 10 -1  12 11 -1  12 12 -1

2
3
2
4 2
3
3
3
3
3
3
}}}
[E1:Test 2] {{{
138

7 3 1 7 4 1 7 5 1 7 6 1 7 7 5 7 8 1 7 9 1 7 10 1 7 11 1
8 3 1 8 4 1 8 5 1 8 6 1 8 7 1 8 8 1 8 9 1 8 10 1 8 11 1
9 3 1 9 4 1 9 5 1 9 6 1 9 7 1 9 8 1 9 9 1 9 10 1 9 11 1
6 3 1 6 4 1 6 5 1 6 6 1 6 7 1 6 8 1 6 9 1 6 10 1 6 11 1
5 3 1 5 4 1 5 5 1 5 6 1 5 7 1 5 8 1 5 9 1 5 10 1 5 11 1

4 4 1 4 5 1 4 6 1 4 7 1 4 8 1 4 9 1 4 10 1
10 4 1 10 5 1 10 6 1 10 7 1 10 8 1 10 9 1 10 10 1

3 5 1 3 6 1 3 7 1 3 8 1 3 9 1
11 5 1 11 6 1 11 7 1 11 8 1 11 9 1

7 3 -1 7 4 -1 7 5 -1 7 6 -1 7 7 -5 7 8 -1 7 9 -1 7 10 -1 7 11 -1
8 3 -1 8 4 -1 8 5 -1 8 6 -1 8 7 -1 8 8 -1 8 9 -1 8 10 -1 8 11 -1
9 3 -1 9 4 -1 9 5 -1 9 6 -1 9 7 -1 9 8 -1 9 9 -1 9 10 -1 9 11 -1
6 3 -1 6 4 -1 6 5 -1 6 6 -1 6 7 -1 6 8 -1 6 9 -1 6 10 -1 6 11 -1
5 3 -1 5 4 -1 5 5 -1 5 6 -1 5 7 -1 5 8 -1 5 9 -1 5 10 -1 5 11 -1

4 4 -1 4 5 -1 4 6 -1 4 7 -1 4 8 -1 4 9 -1 4 10 -1
10 4 -1 10 5 -1 10 6 -1 10 7 -1 10 8 -1 10 9 -1 10 10 -1

3 5 -1 3 6 -1 3 7 -1 3 8 -1 3 9 -1
11 5 -1 11 6 -1 11 7 -1 11 8 -1 11 9 -1

2
2

3

2
2
}}}

===========================================================================

Write a summary of how you made the changes that you did:

[E2:Summary] {{{
In order to add mirror block functionality, I added a new conditional branch to
the fire laser command, which checked whether the current block has value 2.

In this branch, I delegated the logic to a function called reflect_laser.
This function is given the current laser position, the laser charge and
the direction that the laser should go in x and y. This is initially 0 for x
and 1 for y, because when the laser is first reflected, it moves vertically.

In the reflect_laser function, the laser charge is halved, and then another
function, delete_in_direction, is called twice. This function implements
the logic to loop over the blocks in the lasers path, decrementing the laser
charge and removing blocks. This function also recursively calls reflect_laser
if it encounters a mirror.

The first test is designed to test whether mirror blocks function as required
when reflected multiple times and destroying blocks (including TNT blocks).

The second test is supposed to test an edge case, where TNT absorbs all of the
charge of reflected lasers (but do not explode). This also tests win
functionality.
}}}

Write two tests to test your implementation of Extension 2 ("Mirror Blocks").

[E2:Test 1] {{{
7

7 7 2 5 7 4 9 7 2 6 7 1 4 7 2 9 8 1
4 6 1

2

}}}
[E2:Test 2] {{{
5
7 7 2
6 7 4
5 7 1
8 7 4
9 7 2

2
1 1
1 1
2
}}}
